diff --git a/tools/fetch_dawn_dependencies.py b/tools/fetch_dawn_dependencies.py
index 151a26ce3e..0000000000 100644
--- a/tools/fetch_dawn_dependencies.py
+++ b/tools/fetch_dawn_dependencies.py
@@ -82,12 +82,12 @@ parser.add_argument('-ns',
 parser.add_argument('-t',
     '--use-test-deps',
     action='store_true',
     default=False,
     help="""
-    Deprecated: Test dependencies are now always included.
+    Fetch dependencies needed for testing
     """)
 
 def main(args):
     # The dependencies that we need to pull from the DEPS files.
     # Dependencies of dependencies are prefixed by their ancestors.
-    required_submodules = [
-        'third_party/abseil-cpp',
-        'third_party/dxc',
-        'third_party/dxheaders',
-        'third_party/glfw',
-        'third_party/jinja2',
-        'third_party/khronos/EGL-Registry',
-        'third_party/khronos/OpenGL-Registry',
-        'third_party/libprotobuf-mutator/src',
-        'third_party/protobuf',
-        'third_party/markupsafe',
-        'third_party/glslang/src',
-        'third_party/google_benchmark/src',
-        'third_party/googletest',
-        'third_party/spirv-headers/src',
-        'third_party/spirv-tools/src',
-        'third_party/vulkan-headers/src',
-        'third_party/vulkan-loader/src',
-        'third_party/vulkan-utility-libraries/src',
-        'third_party/webgpu-headers/src',
-    ]
+    required_submodules = [
+        'third_party/abseil-cpp',
+        'third_party/glfw',
+        'third_party/jinja2',
+        'third_party/khronos/EGL-Registry',
+        'third_party/khronos/OpenGL-Registry',
+        'third_party/libprotobuf-mutator/src',
+        'third_party/markupsafe',
+        'third_party/glslang/src',
+        'third_party/spirv-headers/src',
+        'third_party/spirv-tools/src',
+        'third_party/vulkan-headers/src',
+        'third_party/vulkan-loader/src',
+        'third_party/vulkan-utility-libraries/src',
+        'third_party/webgpu-headers/src',
+    ]
+
+    if args.use_test_deps:
+        required_submodules += [
+            'third_party/googletest',
+            'third_party/google_benchmark/src',
+            'third_party/protobuf',
+            'third_party/dxc',
+            'third_party/dxheaders',
+        ]
 
     root_dir = Path(args.directory).resolve()
 
     process_dir(args, root_dir, required_submodules)
 
@@ -129,10 +129,10 @@ def process_dir(args, dir_path, required_submodules):
     ldict = {}
     exec(DEPS, globals(), ldict)
 
     deps = ldict.get('deps')
     variables = ldict.get('vars', {})
 
-    if deps is None:
-        log(f"WARNING: DEPS file '{deps_path}' does not define a 'deps' variable")
-        return
+    if deps is None:
+        log(f"ERROR: DEPS file '{deps_path}' does not define a 'deps' variable")
+        exit(1)
 
     for submodule in required_submodules:
         if submodule not in deps:
             continue
